---
title: Events
layout: doc
---

{{! ----------------------------------------------------------------- }}

<h2>Event binding</h2>

{{! ----------------------------------------------------------------- }}

<h3>jQuery event binding</h3>

<p>Bind events with jQuery with standard jQuery event methods
  <a href="http://api.jquery.com/on/"><code>.on()</code></a>,
  <a href="http://api.jquery.com/off/"><code>.off()</code></a>, and
  <a href="http://api.jquery.com/one/"><code>.one()</code></a>.
  Event names are namespaced with <code>.infiniteScroll</code>.</p>

``` js
// jQuery
function listener(/* parameters */) {
  console.log('eventName happened');
}
// add event listener
$container.on( 'eventName.infiniteScroll', listener );
// remove event listener
$container.off( 'eventName.infiniteScroll', listener );
// add event listener to trigger once. note ONE not ON
$container.one( 'eventName.infiniteScroll', function() {
  console.log('eventName happened just once');
});
```

{{! ----------------------------------------------------------------- }}

<h3>Vanilla JS event binding</h3>

<p>Bind events with vanilla JS with <code>.on()</code>, <code>.off()</code>, and <code>.once()</code> methods.</p>

``` js
// vanilla JS
function listener(/* parameters */) {
  console.log('eventName happened');
}
// add event listener
infScroll.on( 'eventName', listener );
// remove event listener
infScroll.off( 'eventName', listener );
// add event listener to trigger once. note ONCE not ONE or ON
infScroll.once( 'eventName', function() {
  console.log('eventName happened just once');
});
```

{{! ----------------------------------------------------------------- }}

<h2>Infinite Scroll events</h2>

{{! ----------------------------------------------------------------- }}

<h3>scrollThreshold</h3>

<p>Triggered when scroll position is less than <a href="options.html#scrollthreshold"><code>scrollThreshold</code> option</a> distance.</p>

``` js
// jQuery
$container.on( 'scrollThreshold.infiniteScroll', function( event ) {
  console.log('Scroll at bottom');
});

// vanilla JS
infScroll.on( 'scrollThreshold', function() {...});
```

{{! ----------------------------------------------------------------- }}

<h3>request</h3>

<p>Triggered when Infinite Scroll makes the request for the next page to be loaded.</p>

``` js
// jQuery
$container.on( 'request.infiniteScroll', function( event, path ) {
  console.log( 'Loading page: ' + path );
});

// vanilla JS
infScroll.on( 'request', function( path ) {...})
```

<p class="argument">
  <code class="argument__code">path</code>
  <span class="argument__type"><i>String</i></span>
  <span class="argument__description">Requested page URL path</span>
</p>

{{! ----------------------------------------------------------------- }}

<h3>load</h3>

<p>Triggered when the next page has been successfully loaded, but not yet added to the container.</p>

``` js
// jQuery
$container.on( 'load.infiniteScroll', function( event, response, path ) {
  console.log( 'Loaded: ' + path );
});

// vanilla JS
infScroll.on( 'load', function( response, path ) {...});
```

<p class="argument">
  <code class="argument__code">response</code>
  <span class="argument__type"><i>Document</i> or <i>String</i></span>
  <span class="argument__description">Response body of the loaded request. You can change the type of response with <a href="options.html#responsetype"><code>responseType</code></a></span>
</p>
<p class="argument">
  <code class="argument__code">path</code>
  <span class="argument__type"><i>String</i></span>
  <span class="argument__description">Loaded page URL path</span>
</p>

``` js
var infScroll = $container.data('infiniteScroll');

$container.on( 'load.infiniteScroll', function( event, response, path ) {
  console.log( 'Loaded: ' + path,
    'Current page: ' + infScroll.pageIndex,
    infScroll.loadCount + ' pages loaded'
  );
});
```

{{! ----------------------------------------------------------------- }}

<h3>append</h3>

<p>Triggered after item elements have been appended to the container.</p>

``` js
// jQuery
$container.on( 'append.infiniteScroll', function( event, response, path, items ) {
  console.log( 'Loaded: ' + path );
});

// vanilla JS
infScroll.on( 'append', function( response, path, items ) {...});
```

<p class="argument">
  <code class="argument__code">response</code>
  <span class="argument__type"><i>Document</i> or <i>String</i></span>
  <span class="argument__description">Response body of the loaded request</span>
</p>
<p class="argument">
  <code class="argument__code">path</code>
  <span class="argument__type"><i>String</i></span>
  <span class="argument__description">Loaded page URL path</span>
</p>
<p class="argument">
  <code class="argument__code">items</code>
  <span class="argument__type"><i>NodeList</i></span>
  <span class="argument__description">Appended item elements</span>
</p>

``` js
$container.on( 'append.infiniteScroll', function( event, response, path, items ) {
  console.log( items.length + ' items appended' );
});
```

{{! ----------------------------------------------------------------- }}

<h3>error</h3>

<p>Triggered when the next page could not be loaded.</p>

``` js
// jQuery
$container.on( 'error.infiniteScroll', function( event, error, path ) {
  console.log( 'Could not load: ' + path )
})

// vanilla JS
infScroll.on( 'error', function( error, path ) {...})
```

<p class="argument">
  <code class="argument__code">error</code>
  <span class="argument__type"><i>Error</i> or <i>String</i></span>
</p>
<p class="argument">
  <code class="argument__code">path</code>
  <span class="argument__type"><i>String</i></span>
  <span class="argument__type">Requested page URL path</span>
</p>

{{! ----------------------------------------------------------------- }}

<h3>last</h3>

<p>Triggered when the last page has been loaded.</p>

<p>Requires <a href="options.html#checklastpage"><code>checkLastPage</code></a> enabled, and <a href="options.html#path"><code>path</code></a> to be set to a next link.</p>

``` js
// jQuery
$container.on( 'last.infiniteScroll', function( event, response, path ) {
  console.log( 'Loaded: ' + path );
});

// vanilla JS
infScroll.on( 'last', function( response, path ) {...});
```

<p class="argument">
  <code class="argument__code">response</code>
  <span class="argument__type"><i>Document</i> or <i>String</i></span>
  <span class="argument__description">Response body of the loaded request</span>
</p>
<p class="argument">
  <code class="argument__code">path</code>
  <span class="argument__type"><i>String</i></span>
  <span class="argument__description">Loaded page URL path</span>
</p>

{{! ----------------------------------------------------------------- }}

<h3>history</h3>

<p>Triggered when the history and URL have been changed.</p>

``` js
// jQuery
$container.on( 'history.infiniteScroll', function( event, title, path ) {
  console.log( 'History changed to: ' + path );
});

// vanilla JS
infScroll.on( 'history', function( title, path ) {...});
```

<p class="argument">
  <code class="argument__code">title</code>
  <span class="argument__type"><i>String</i></span>
  <span class="argument__description">Page title, if present</span>
</p>
<p class="argument">
  <code class="argument__code">path</code>
  <span class="argument__type"><i>String</i></span>
  <span class="argument__description">Page URL path</span>
</p>
